name: Build and Publish Python Package

on:
  push:
    branches:
      - main  # Trigger the action when changes are pushed to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # The environment that will run the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Specify the correct Python version for your project

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry bumpversion

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"  # Ensure Git has user details

      - name: Install project dependencies
        run: |
          poetry install
name: Build and Publish Python Package

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch (not 'master')
  pull_request:
    branches:
      - main  # Trigger on pull requests to 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry bumpversion

      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install project dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run pytest

      - name: Bump version
        run: |
          bumpversion patch  # You can change 'patch' to 'minor' or 'major' based on your needs

      - name: Build package
        run: |
          poetry build

      - name: Publish package to PyPI
        if: github.ref == 'refs/heads/main'  # Only push to PyPI from the 'main' branch
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD --build
